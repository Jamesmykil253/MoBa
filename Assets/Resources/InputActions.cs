//------------------------------------------------------------------------------
// <auto-generated>
//     Generated from Assets/InputActions.inputactions
//     Do not edit this file manually as it will be overwritten.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

namespace MOBA
{
    /// <summary>
    /// Input actions asset for MOBA game system testing.
    /// </summary>
    [Serializable]
    public partial class @InputActions : IInputActionCollection2, IDisposable
    {
        public InputActionAsset asset { get; }

        public @InputActions()
        {
            asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputActions"",
    ""maps"": [
        {
            ""name"": ""Gameplay"",
            ""id"": ""Gameplay"",
            ""actions"": [
                { ""name"": ""Movement"", ""type"": ""Value"", ""id"": ""Movement"", ""expectedControlType"": ""Vector2"", ""processors"": """", ""interactions"": """", ""initialStateCheck"": true },
                { ""name"": ""Jump"", ""type"": ""Button"", ""id"": ""Jump"", ""expectedControlType"": ""Button"", ""processors"": """", ""interactions"": """", ""initialStateCheck"": false },
                { ""name"": ""PrimaryAttack"", ""type"": ""Button"", ""id"": ""PrimaryAttack"", ""expectedControlType"": ""Button"", ""processors"": """", ""interactions"": """", ""initialStateCheck"": false },
                { ""name"": ""Interact"", ""type"": ""Button"", ""id"": ""Interact"", ""expectedControlType"": ""Button"", ""processors"": """", ""interactions"": """", ""initialStateCheck"": false },
                { ""name"": ""Ability1"", ""type"": ""Button"", ""id"": ""Ability1"", ""expectedControlType"": ""Button"", ""processors"": """", ""interactions"": """", ""initialStateCheck"": false },
                { ""name"": ""Ability2"", ""type"": ""Button"", ""id"": ""Ability2"", ""expectedControlType"": ""Button"", ""processors"": """", ""interactions"": """", ""initialStateCheck"": false },
                { ""name"": ""Ultimate"", ""type"": ""Button"", ""id"": ""Ultimate"", ""expectedControlType"": ""Button"", ""processors"": """", ""interactions"": """", ""initialStateCheck"": false },
                { ""name"": ""CameraPan"", ""type"": ""Value"", ""id"": ""CameraPan"", ""expectedControlType"": ""Vector2"", ""processors"": """", ""interactions"": """", ""initialStateCheck"": true },
                { ""name"": ""OpenMainMenu"", ""type"": ""Button"", ""id"": ""OpenMainMenu"", ""expectedControlType"": ""Button"", ""processors"": """", ""interactions"": """", ""initialStateCheck"": false },
                { ""name"": ""TestDamage"", ""type"": ""Button"", ""id"": ""TestDamage"", ""expectedControlType"": ""Button"", ""processors"": """", ""interactions"": """", ""initialStateCheck"": false },
                { ""name"": ""TestHeal"", ""type"": ""Button"", ""id"": ""TestHeal"", ""expectedControlType"": ""Button"", ""processors"": """", ""interactions"": """", ""initialStateCheck"": false },
                { ""name"": ""TestProjectile"", ""type"": ""Button"", ""id"": ""TestProjectile"", ""expectedControlType"": ""Button"", ""processors"": """", ""interactions"": """", ""initialStateCheck"": false },
                { ""name"": ""TestState"", ""type"": ""Button"", ""id"": ""TestState"", ""expectedControlType"": ""Button"", ""processors"": """", ""interactions"": """", ""initialStateCheck"": false },
                { ""name"": ""TestFlyweight"", ""type"": ""Button"", ""id"": ""TestFlyweight"", ""expectedControlType"": ""Button"", ""processors"": """", ""interactions"": """", ""initialStateCheck"": false }
            ],
            ""bindings"": [
                { ""name"": """", ""id"": """", ""path"": ""<Gamepad>/leftStick"", ""interactions"": """", ""processors"": """", ""groups"": """", ""action"": ""Movement"", ""isComposite"": false, ""isPartOfComposite"": false },
                { ""name"": """", ""id"": """", ""path"": ""<Keyboard>/w"", ""interactions"": """", ""processors"": """", ""groups"": """", ""action"": ""Movement"", ""isComposite"": true, ""isPartOfComposite"": false },
                { ""name"": ""up"", ""id"": """", ""path"": ""<Keyboard>/w"", ""interactions"": """", ""processors"": """", ""groups"": """", ""action"": ""Movement"", ""isComposite"": false, ""isPartOfComposite"": true },
                { ""name"": ""down"", ""id"": """", ""path"": ""<Keyboard>/s"", ""interactions"": """", ""processors"": """", ""groups"": """", ""action"": ""Movement"", ""isComposite"": false, ""isPartOfComposite"": true },
                { ""name"": ""left"", ""id"": """", ""path"": ""<Keyboard>/a"", ""interactions"": """", ""processors"": """", ""groups"": """", ""action"": ""Movement"", ""isComposite"": false, ""isPartOfComposite"": true },
                { ""name"": ""right"", ""id"": """", ""path"": ""<Keyboard>/d"", ""interactions"": """", ""processors"": """", ""groups"": """", ""action"": ""Movement"", ""isComposite"": false, ""isPartOfComposite"": true },
                { ""name"": """", ""id"": """", ""path"": ""<Keyboard>/space"", ""interactions"": """", ""processors"": """", ""groups"": """", ""action"": ""Jump"", ""isComposite"": false, ""isPartOfComposite"": false },
                { ""name"": """", ""id"": """", ""path"": ""<Mouse>/leftButton"", ""interactions"": """", ""processors"": """", ""groups"": """", ""action"": ""PrimaryAttack"", ""isComposite"": false, ""isPartOfComposite"": false },
                { ""name"": """", ""id"": """", ""path"": ""<Keyboard>/leftAlt"", ""interactions"": """", ""processors"": """", ""groups"": """", ""action"": ""Interact"", ""isComposite"": false, ""isPartOfComposite"": false },
                { ""name"": """", ""id"": """", ""path"": ""<Keyboard>/q"", ""interactions"": """", ""processors"": """", ""groups"": """", ""action"": ""Ability1"", ""isComposite"": false, ""isPartOfComposite"": false },
                { ""name"": """", ""id"": """", ""path"": ""<Keyboard>/e"", ""interactions"": """", ""processors"": """", ""groups"": """", ""action"": ""Ability2"", ""isComposite"": false, ""isPartOfComposite"": false },
                { ""name"": """", ""id"": """", ""path"": ""<Keyboard>/r"", ""interactions"": """", ""processors"": """", ""groups"": """", ""action"": ""Ultimate"", ""isComposite"": false, ""isPartOfComposite"": false },
                { ""name"": """", ""id"": """", ""path"": ""<Mouse>/delta"", ""interactions"": """", ""processors"": """", ""groups"": """", ""action"": ""CameraPan"", ""isComposite"": false, ""isPartOfComposite"": false },
                { ""name"": """", ""id"": """", ""path"": ""<Keyboard>/escape"", ""interactions"": """", ""processors"": """", ""groups"": """", ""action"": ""OpenMainMenu"", ""isComposite"": false, ""isPartOfComposite"": false },
                { ""name"": """", ""id"": """", ""path"": ""<Keyboard>/t"", ""interactions"": """", ""processors"": """", ""groups"": """", ""action"": ""TestDamage"", ""isComposite"": false, ""isPartOfComposite"": false },
                { ""name"": """", ""id"": """", ""path"": ""<Keyboard>/y"", ""interactions"": """", ""processors"": """", ""groups"": """", ""action"": ""TestHeal"", ""isComposite"": false, ""isComposite"": false },
                { ""name"": """", ""id"": """", ""path"": ""<Keyboard>/u"", ""interactions"": """", ""processors"": """", ""groups"": """", ""action"": ""TestProjectile"", ""isComposite"": false, ""isPartOfComposite"": false },
                { ""name"": """", ""id"": """", ""path"": ""<Keyboard>/i"", ""interactions"": """", ""processors"": """", ""groups"": """", ""action"": ""TestState"", ""isComposite"": false, ""isPartOfComposite"": false },
                { ""name"": """", ""id"": """", ""path"": ""<Keyboard>/o"", ""interactions"": """", ""processors"": """", ""groups"": """", ""action"": ""TestFlyweight"", ""isComposite"": false, ""isPartOfComposite"": false }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        }

        public void Dispose()
        {
            UnityEngine.Object.Destroy(asset);
        }

        public InputBinding? bindingMask
        {
            get => asset.bindingMask;
            set => asset.bindingMask = value;
        }

        public ReadOnlyArray<InputDevice>? devices
        {
            get => asset.devices;
            set => asset.devices = value;
        }

        public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

        public IEnumerable<InputBinding> bindings => asset.bindings;

        public InputAction FindAction(string actionName, bool throwIfNotFound = false) => asset.FindAction(actionName, throwIfNotFound);

        public int FindBinding(InputBinding binding, out InputAction action) => asset.FindBinding(binding, out action);

        public bool Contains(InputAction action)
        {
            return asset.Contains(action);
        }

        public IEnumerator<InputAction> GetEnumerator()
        {
            return asset.GetEnumerator();
        }

        IEnumerator IEnumerable.GetEnumerator()
        {
            return GetEnumerator();
        }

        public void Enable()
        {
            asset.Enable();
        }

        public void Disable()
        {
            asset.Disable();
        }

        // Gameplay
        private readonly InputActionMap m_Gameplay;
        public struct GameplayActions
        {
            private @InputActions m_Wrapper;
            public GameplayActions(@InputActions wrapper) { m_Wrapper = wrapper; }

            public InputAction @Movement => m_Wrapper.m_Gameplay.FindAction("Movement", throwIfNotFound: true);
            public InputAction @Jump => m_Wrapper.m_Gameplay.FindAction("Jump", throwIfNotFound: true);
            public InputAction @PrimaryAttack => m_Wrapper.m_Gameplay.FindAction("PrimaryAttack", throwIfNotFound: true);
            public InputAction @Interact => m_Wrapper.m_Gameplay.FindAction("Interact", throwIfNotFound: true);
            public InputAction @Ability1 => m_Wrapper.m_Gameplay.FindAction("Ability1", throwIfNotFound: true);
            public InputAction @Ability2 => m_Wrapper.m_Gameplay.FindAction("Ability2", throwIfNotFound: true);
            public InputAction @Ultimate => m_Wrapper.m_Gameplay.FindAction("Ultimate", throwIfNotFound: true);
            public InputAction @CameraPan => m_Wrapper.m_Gameplay.FindAction("CameraPan", throwIfNotFound: true);
            public InputAction @OpenMainMenu => m_Wrapper.m_Gameplay.FindAction("OpenMainMenu", throwIfNotFound: true);
            public InputAction @TestDamage => m_Wrapper.m_Gameplay.FindAction("TestDamage", throwIfNotFound: true);
            public InputAction @TestHeal => m_Wrapper.m_Gameplay.FindAction("TestHeal", throwIfNotFound: true);
            public InputAction @TestProjectile => m_Wrapper.m_Gameplay.FindAction("TestProjectile", throwIfNotFound: true);
            public InputAction @TestState => m_Wrapper.m_Gameplay.FindAction("TestState", throwIfNotFound: true);
            public InputAction @TestFlyweight => m_Wrapper.m_Gameplay.FindAction("TestFlyweight", throwIfNotFound: true);
        }
        public GameplayActions @Gameplay => new GameplayActions(this);
    }
}